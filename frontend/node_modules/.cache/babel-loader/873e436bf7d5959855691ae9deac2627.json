{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gayathrinannapaneni/Desktop/Fullstack/python/djreact/frontend/gui/src/containers/SignUp.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button } from 'antd'; // import { QuestionCircleOutlined } from '@ant-design/icons';\n// const { Option } = Select;\n// const AutoCompleteOption = AutoComplete.Option;\n\nclass RegistrationForm extends React.Component {\n  render() {\n    const onFinish = values => {\n      console.log('Received values of form: ', values);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"register\",\n      onFinish: onFinish,\n      scrollToFirstError: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"E-mail\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"Password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"Confirm Password\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(rule, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject('The two passwords that you entered do not match!');\n          }\n\n        })],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), \"or\", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login/\",\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/gayathrinannapaneni/Desktop/Fullstack/python/djreact/frontend/gui/src/containers/SignUp.js"],"names":["React","useState","Form","Input","Button","RegistrationForm","Component","render","onFinish","values","console","log","required","message","type","getFieldValue","validator","rule","value","Promise","resolve","reject","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n// import { QuestionCircleOutlined } from '@ant-design/icons';\n// const { Option } = Select;\n// const AutoCompleteOption = AutoComplete.Option;\n  \n\nclass RegistrationForm extends React.Component{\n    render(){\n\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n  };\n\n\n  return (\n    <Form\n      name=\"register\"\n      onFinish={onFinish}\n      scrollToFirstError\n    >\n        <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input name=\"username\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"confirm\"\n        label=\"Confirm Password\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          ({ getFieldValue }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n        or\n        <NavLink to=\"/login/\" style={{marginRight:'10px'}}> \n            Login\n        </NavLink>\n      </Form.Item>\n    </Form>\n  );\n};\n}\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}