{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gayathrinannapaneni/Desktop/Fullstack/python/djreact/frontend/gui/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nconst FormItem = Form.Item; // const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push('/');\n        }\n      });\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    }\n\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errorMessage, this.props.loading ?\n      /*#__PURE__*/\n      // <Spin indicator={antIcon} />\n      _jsxDEV(\"h1\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(FormItem, {\n          children: getFieldDecorator('userName', {\n            rules: [{\n              required: true,\n              message: 'Please input your username!'\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            type: \"user\",\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n          children: getFieldDecorator('password', {\n            rules: [{\n              required: true,\n              message: 'Please input your Password!'\n            }]\n          })( /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), \"Or\", /*#__PURE__*/_jsxDEV(NavLink, {\n            style: {\n              marginRight: '10px'\n            },\n            to: \"/signup/\",\n            children: \" signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const WrappedNormalLoginForm = Form.create()(LoginForm);\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/gayathrinannapaneni/Desktop/Fullstack/python/djreact/frontend/gui/src/containers/Login.js"],"names":["React","Form","Icon","Input","Button","Spin","connect","NavLink","actions","FormItem","Item","LoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","history","push","render","errorMessage","error","message","getFieldDecorator","loading","rules","required","marginRight","mapStateToProps","state","mapDispatchToProps","dispatch","username","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nconst FormItem = Form.Item;\n// const antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass LoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                // <Spin indicator={antIcon} />\n                  <h1>Loading.....</h1>\n                :\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                    <FormItem>\n                    {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input type=\"user\" placeholder=\"Username\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input  type=\"password\" placeholder=\"Password\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                        Login\n                    </Button>\n                    Or \n                    <NavLink \n                        style={{marginRight: '10px'}} \n                        to='/signup/'> signup\n                    </NavLink>\n                    </FormItem>\n                </Form>\n            }\n      </div>\n    );\n  }\n}\n\n// const WrappedNormalLoginForm = Form.create()(LoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}