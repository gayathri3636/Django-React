{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gayathrinannapaneni/Desktop/Fullstack/python/djreact/frontend/gui/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Icon, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.username, values.password);\n        }\n      });\n      console.log('valuesof form', this.state.username, this.state.password);\n    };\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errorMessage, this.props.loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n        style: {\n          fontSize: 24\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onClick: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), \"or\", /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/signup/\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/gayathrinannapaneni/Desktop/Fullstack/python/djreact/frontend/gui/src/containers/Login.js"],"names":["React","Form","Input","Button","Icon","Spin","LoadingOutlined","connect","NavLink","actions","LoginForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","username","password","console","log","state","render","errorMessage","error","message","loading","fontSize","required","marginRight","mapStateToProps","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, Icon, Spin } from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {connect} from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nclass LoginForm extends React.Component{\nhandleSubmit = (e) => {\n    e.preventDefault();\n  this.props.form.validateFields((err, values)=>{\n    if(!err){\n      this.props.onAuth(values.username, values.password);\n    }\n  })\n    console.log('valuesof form', this.state.username, this.state.password)\n}\nrender(){\n  let errorMessage = null;\n  if(this.props.error){\n    errorMessage = (\n    <p>{this.props.error.message}</p>\n    )\n  }\n  return (\n    <div>\n      {errorMessage}\n      {\n        this.props.loading ? \n        <LoadingOutlined style={{fontSize:24}} /> \n        :\n        <Form onClick={this.handleSubmit} >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your username!',\n          },\n        ]}\n      >\n        <Input name=\"username\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password name=\"password\" />\n      </Form.Item>\n\n      <Form.Item>\n        <Button  type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n        or\n        <NavLink to=\"/signup/\" style={{marginRight:'10px'}}> \n            Signup\n        </NavLink>\n      </Form.Item>\n    </Form>\n      }\n    </div>\n  );\n}\n}\n\nconst mapStateToProps = (state)=>{\n  return{\n    loading:state.loading,\n    error:state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username,password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}